<?php

/**
 * @file
 * Primary module hooks for OpenEuropa Translation CDT module.
 */

declare(strict_types=1);

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Url;
use Drupal\oe_translation_cdt\TranslationRequestCdt;

/**
 * Implements hook_entity_bundle_info_alter().
 */
function oe_translation_cdt_entity_bundle_info_alter(array &$bundles): void {
  if (isset($bundles['oe_translation_request']['cdt'])) {
    $bundles['oe_translation_request']['cdt']['class'] = TranslationRequestCdt::class;
  }
}

/**
 * Implements hook_entity_ENTITY_TYPE_view_alter().
 */
function oe_translation_cdt_oe_translation_request_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() !== 'cdt') {
    return;
  }

  /** @var \Drupal\oe_translation_cdt\TranslationRequestCdtInterface $entity */
  if (!isset($build['meta'])) {
    return;
  }

  $header = &$build['meta']['#header'];
  $header['cdt_correlation_id'] = t('Correlation ID');
  $header['cdt_permanent_id'] = t('Permanent ID');
  $header['cdt_operations'] = t('Operations');
  $row = &$build['meta']['#rows'][0];

  $row['cdt_correlation_id'] = $entity->getCorrelationId() ?? t('Not available');
  $row['cdt_permanent_id'] = $entity->getCdtId() ?? t('Not available');

  $operations = [];
  if (!$entity->getCdtId()) {
    $operations['permanent_id'] = [
      'title' => t('Get Permanent ID'),
      'url' => Url::fromRoute('oe_translation_cdt.get_permanent_id', [
        'translation_request' => $entity->id(),
      ], [
        'query' => [
          'destination' => Url::fromRoute('<current>')->toString(),
        ],
      ]),
    ];
  }
  else {
    $operations['status'] = [
      'title' => t('Refresh status'),
      'url' => Url::fromRoute('oe_translation_cdt.refresh_status', [
        'translation_request' => $entity->id(),
      ], [
        'query' => [
          'destination' => Url::fromRoute('<current>')->toString(),
        ],
      ]),
    ];
  }
  $row['cdt_operations'] = [
    'data' => [
      '#type' => 'operations',
      '#links' => $operations,
    ],
  ];

  if ($entity->getComments()) {
    $build['comment'] = [
      '#type' => 'fieldset',
      '#title' => t('Comment to the provider'),
    ];
    $build['comment'][] = [
      '#markup' => $entity->getComments(),
    ];
  }

  $logs = _oe_translation_create_request_logs_tables($entity);
  if ($logs) {
    $build['logs'] = [
      '#type' => 'details',
      '#title' => t('Log messages (@count)', ['@count' => count($logs['#rows'])]),
      0 => $logs,
    ];
  }
}
