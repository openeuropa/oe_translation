clone:
  git:
    image: registry.fpfis.eu/drone-plugins/git:next
    when:
      event: [ push, pull_request, tag ]
  git:
    image: registry.fpfis.eu/drone-plugins/git
    when:
      event: [ deployment ]

workspace:
  base: /test
  path: oe_translation

services:
  web:
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    environment: &web-environment
      - DOCUMENT_ROOT=/test/oe_translation
      - COMPOSERVER=--2
      - POETRY_IDENTIFIER_SEQUENCE=NEXT_EUROPA_COUNTER
      - POETRY_SERVICE_ENDPOINT=http://web:8080/build/poetry-mock/wsdl
      - POETRY_SERVICE_USERNAME=admin
      - POETRY_SERVICE_PASSWORD=admin
      - POETRY_NOTIFICATION_USERNAME=admin
      - POETRY_NOTIFICATION_PASSWORD=admin
  mysql:
    image: registry.fpfis.eu/fpfis/sql:percona-5.7
    command: --innodb-log-file-size=1G --max_allowed_packet=1G --innodb-buffer-pool-size=512M --wait_timeout=3000 --net_write_timeout=3000 --log_error_verbosity=3
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes

pipeline:
  composer-add-lenient:
    group: warmup
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    volumes:
      - /cache:/cache
    commands:
      # Pre-install 9.4.x so that all modules are compatible and plugins are installed too.
      - composer require drupal/core:~9.4.0 drupal/core-composer-scaffold:~9.4.0 --update-with-all-dependencies --ansi --no-progress --no-interaction --no-plugins --no-scripts
      # Install the lenient plugin so that non-D10 ready components will be marked as compatible.
      - composer require mglaman/composer-drupal-lenient --ansi --no-progress --no-interaction --no-plugins --no-scripts
      - composer config allow-plugins.mglaman/composer-drupal-lenient true --ansi --no-interaction --no-plugins --no-scripts
      # Allow drupal/tmgmt to have a lenient Drupal core version constraint.
      - composer config --merge --json extra.drupal-lenient.allowed-list '["drupal/tmgmt"]' --ansi --no-interaction --no-plugins --no-scripts
      # Delete the lock file to ignore all dependencies when requiring D10.
      - rm -f composer.lock
      # When dependencies are installed without plugins above, the installer doesn't place Drupal packages in the correct folder.
      - rm -rf vendor/drupal
    when:
      matrix:
        CORE_VERSION: "10.0"

  composer-install:
    group: prepare
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    volumes:
      - /cache:/cache
    commands:
      - composer self-update --2
      - composer require drupal/core:~${CORE_VERSION} drupal/core-composer-scaffold:~${CORE_VERSION} --update-with-all-dependencies --ansi --no-progress --no-interaction

  site-install:
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    commands:
      - while ! mysqladmin ping -h mysql --silent; do sleep 1; done
      - ./vendor/bin/run drupal:site-install

  grumphp:
    group: test
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    commands:
      - ./vendor/bin/grumphp run

  phpunit:
    group: test
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    environment: *web-environment
    commands:
      - ./vendor/bin/phpunit

  behat:
    group: test
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    environment: *web-environment
    commands:
      - ./vendor/bin/behat --strict

  debug:
    image: registry.fpfis.eu/fpfis/httpd-php:${PHP_VERSION}-ci
    commands:
      - ./vendor/bin/drush ws --count 500
    when:
      status: failure

matrix:
  include:
    - CORE_VERSION: 9.4.15
      PHP_VERSION: 8.0
    - CORE_VERSION: 9.4.15
      PHP_VERSION: 8.1
    - CORE_VERSION: 10.0
      PHP_VERSION: 8.1
